name: IDE Profile Updater

on:
  schedule:
    - cron: "0 * * * *" # Atualiza a cada hora
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    name: Compiling and Pushing Profile Updates
    
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Atualizar dados do perfil
        id: update_script
        run: |
          node -e "
            const https = require('https');
            const fs = require('fs');
            
            const readmePath = './README.md';
            const user = 'OliveiraStrategic';
            const maxEvents = 5;

            async function main() {
              const activityApiUrl = \`https://api.github.com/users/\${user}/events\`;
              let activityMarkdown = 'Nenhuma atividade pública recente encontrada.';
              
              try {
                const eventsJson = await fetchJson(activityApiUrl);
                const recentEvents = eventsJson.slice(0, maxEvents);
                
                const formattedEvents = recentEvents.map(event => {
                  if (event.type === 'PushEvent') {
                    const commitCount = event.payload.size === 1 ? '1 commit' : \`\${event.payload.size} commits\`;
                    return \`- ⬆️ Fez push de \${commitCount} para [**\${event.repo.name}**](https://github.com/\${event.repo.name})\`;
                  }
                  return null;
                }).filter(Boolean);

                if (formattedEvents.length > 0) {
                  activityMarkdown = formattedEvents.join('\\n');
                }
              } catch (error) {
                console.error('Erro ao buscar atividade:', error.message);
                activityMarkdown = 'Não foi possível carregar o stream de atividade.';
              }

              let readmeContent = fs.readFileSync(readmePath, 'utf-8');

              const options = { timeZone: 'America/Sao_Paulo', day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' };
              const date = new Date().toLocaleString('pt-BR', options);
              const finalDate = \`\${date.replace(',', '')}\`;
              readmeContent = readmeContent.replace('', finalDate);
              
              const placeholder = '<pre>// Aguardando stream de commits...</pre>';
              const finalActivity = \`<pre>\${activityMarkdown}</pre>\`;
              readmeContent = readmeContent.replace(placeholder, finalActivity);

              fs.writeFileSync(readmePath, readmeContent);
              console.log('Arquivo README.md atualizado com sucesso no runner.');
            }

            function fetchJson(url) {
              return new Promise((resolve, reject) => {
                const options = { headers: { 'User-Agent': 'GitHub-Action' } };
                https.get(url, options, (res) => {
                  let data = '';
                  res.on('data', (chunk) => data += chunk);
                  res.on('end', () => {
                    try {
                      if (res.statusCode >= 400) return reject(new Error(\`API falhou com status \${res.statusCode}\`));
                      resolve(JSON.parse(data));
                    } catch (e) { reject(e); }
                  });
                }).on('error', (err) => reject(err));
              });
            }

            main();
          "
      
      - name: Fazer commit das alterações
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          # Apenas faz o commit se houver alterações
          git diff --staged --quiet || git commit -m 'chore(profile): auto-update IDE stats'
          git push
